name: CI

on: [push, pull_request]

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3.5.2

      - name: Setup Java ${{ matrix.jdk-version }}
        uses: actions/setup-java@v3
        with:
          distribution: 'zulu'
          java-version: 17
          cache: 'gradle'

      - name: Set up Python 3.8
        uses: actions/setup-python@v4
        with:
          python-version: 3.8
          cache: 'pip'

      - name: Install Python modules
        run: |
          python -m pip install --upgrade pip
          if [ -f scripts/requirements.txt ]; then pip install -r scripts/requirements.txt; fi

      - name: Grant execute permission for gradlew
        run: chmod +x gradlew

      - name: Check
        run: |
          ./gradlew --info --no-daemon --no-watch-fs check

      - name: Publish Locally
        run: |
          ./gradlew --info publishToMavenLocal --warning-mode all

      - name: Clone dgs-examples-java
        uses: actions/checkout@v3.5.2
        with:
          repository: Netflix/dgs-examples-java
          path: build/examples/dgs-examples-java

      - name: Clone dgs-examples-kotlin
        uses: actions/checkout@v3.5.2
        with:
          repository: Netflix/dgs-examples-kotlin
          path: build/examples/dgs-examples-kotlin

      - name: Build Examples
        run: |
          find /home/runner/.m2/repository/ -type f -name "*graphql-dgs-codegen-gradle*"
          ./scripts/test-examples.py -v -k --path=./build/examples

      - name: Upload JUnit Tests
        uses: actions/upload-artifact@v3  # upload test results
        if: success() || failure()        # run this step even if previous step failed
        with:
          name: test-results
          path: '**/test-results/**/*.xml'
